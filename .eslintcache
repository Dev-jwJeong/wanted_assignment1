[{"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\App.js":"1","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\App.test.js":"2","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\index.js":"3","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\reportWebVitals.js":"4","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\setupTests.js":"5","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\component\\index.js":"6","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\config\\api.js":"7","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\index.js":"8","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Sign\\index.js":"9","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Sign\\style.js":"10","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\index.js":"11","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\style.js":"12","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\TodoItem\\index.js":"13","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\TodoItem\\style.js":"14","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\styles\\index.js":"15"},{"size":614,"mtime":1661950377006,"results":"16","hashOfConfig":"17"},{"size":246,"mtime":1661924486551,"results":"18","hashOfConfig":"17"},{"size":535,"mtime":1661924486573,"results":"19","hashOfConfig":"17"},{"size":362,"mtime":1661924486587,"results":"20","hashOfConfig":"17"},{"size":241,"mtime":1661924486592,"results":"21","hashOfConfig":"17"},{"size":0,"mtime":1661925107371,"results":"22","hashOfConfig":"17"},{"size":215,"mtime":1661954467051,"results":"23","hashOfConfig":"17"},{"size":77,"mtime":1661954467110,"results":"24","hashOfConfig":"17"},{"size":5446,"mtime":1661954467243,"results":"25","hashOfConfig":"17"},{"size":0,"mtime":1661925784744,"results":"26","hashOfConfig":"17"},{"size":3557,"mtime":1661954467370,"results":"27","hashOfConfig":"17"},{"size":0,"mtime":1661925784744,"results":"28","hashOfConfig":"17"},{"size":3371,"mtime":1661954467501,"results":"29","hashOfConfig":"17"},{"size":0,"mtime":1661925784744,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1661925260882,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"553150",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\App.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\App.test.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\index.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\reportWebVitals.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\setupTests.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\component\\index.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\config\\api.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\index.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Sign\\index.js",["79","80"],[],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport swal from 'sweetalert';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundSize: 'cover',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nasync function loginUser(credentials) {\n  return fetch(\n    'https://n38lcff1wk.execute-api.ap-northeast-2.amazonaws.com/auth/signin',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    }\n  ).then(data => data.json());\n}\n\nasync function signUpUser(credentials) {\n  return fetch(\n    'https://n38lcff1wk.execute-api.ap-northeast-2.amazonaws.com/auth/signup',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    }\n  ).then(data => data.json());\n}\n\nexport default function Signin() {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginButton, setLoginButton] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await loginUser({\n      email,\n      password,\n    });\n    if ('access_token' in response) {\n      swal('Success', 'Todo페이지로 이동합니다.', 'success', {\n        buttons: false,\n        timer: 2000,\n      }).then(value => {\n        localStorage.setItem('access_token', response['access_token']);\n        window.location.href = '/wanted-pre-onboarding-fe/todo';\n      });\n    } else {\n      if (response.statusCode === 404) {\n        swal({\n          title: '해당 사용자가 없습니다.',\n          text: '해당 정보로 회원가입 하시겠습니까?',\n          icon: 'info',\n          buttons: ['아니요', '네'],\n        }).then(YES => {\n          if (YES) {\n            signUp();\n          }\n        });\n      } else {\n        swal('Failed', response.message || '', 'error');\n      }\n    }\n  };\n\n  const signUp = async () => {\n    const response = await signUpUser({\n      email,\n      password,\n    });\n    if ('access_token' in response) {\n      swal('Success', 'Todo페이지로 이동합니다.', 'success', {\n        buttons: false,\n        timer: 2000,\n      }).then(value => {\n        localStorage.setItem('access_token', response['access_token']);\n        window.location.href = '/wanted-pre-onboarding-fe/todo';\n      });\n    } else {\n      swal('Failed', response.message || '', 'error');\n    }\n  };\n\n  const ActiveIsPassedLogin = () => {\n    if (!email.includes('@')) {\n      setErrorMessage('이메일에 @를 포함해주세요.');\n      return setLoginButton(true);\n    }\n    if (password.length < 8) {\n      setErrorMessage('패스워드는 8글자 이상입니다.');\n      return setLoginButton(true);\n    }\n    setErrorMessage('');\n    return setLoginButton(false);\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} md={7} className={classes.image} />\n      <Grid item xs={12} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              name=\"email\"\n              label=\"Email Address\"\n              onChange={e => setEmail(e.target.value)}\n              onKeyUp={ActiveIsPassedLogin}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              onChange={e => setPassword(e.target.value)}\n              onKeyUp={ActiveIsPassedLogin}\n            />\n            <Typography component=\"h1\" variant=\"h5\">\n              {errorMessage}\n            </Typography>\n            <Button\n              disabled={loginButton}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Sign\\style.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\index.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\style.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\TodoItem\\index.js",["81","82","83","84"],[],"import React from 'react';\nimport { Checkbox, IconButton, ListItemText } from '@material-ui/core';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Clear, Create } from '@material-ui/icons';\nimport swal from 'sweetalert';\n\nconst styles = {\n  Icon: {\n    marginLeft: 'auto',\n  },\n  Paper: {\n    padding: 10,\n    display: 'flex',\n    alignItems: 'center',\n    margin: 10,\n  },\n};\n\nasync function deleteTodo(id) {\n  const token = localStorage.getItem('access_token');\n  return fetch(\n    'https://n38lcff1wk.execute-api.ap-northeast-2.amazonaws.com/todos/' + id,\n    {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + token,\n      },\n    }\n  ).then(data => {\n    return data;\n  });\n}\n\nasync function updateTodo(todo) {\n  const token = localStorage.getItem('access_token');\n  return fetch(\n    'https://n38lcff1wk.execute-api.ap-northeast-2.amazonaws.com/todos/' +\n      todo.id,\n    {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n      body: JSON.stringify({\n        isCompleted: todo.isCompleted,\n        todo: todo.todo,\n      }),\n    }\n  ).then(data => {\n    return data;\n  });\n}\n\nfunction Todo(prop) {\n  let todo = prop.todo;\n  const handleDelete = async e => {\n    e.preventDefault();\n    await deleteTodo(todo.id);\n    prop.fetchTodo();\n    swal('삭제되었습니다.', '삭제된 TODO: ' + todo.todo, 'success');\n  };\n\n  const handleCheck = async e => {\n    e.preventDefault();\n\n    await updateTodo({\n      ...todo,\n      isCompleted: !todo.isCompleted,\n    });\n    prop.fetchTodo();\n  };\n\n  const handleChange = async e => {\n    e.preventDefault();\n\n    swal({\n      title: 'TODO변경',\n      content: {\n        element: 'input',\n        attributes: {\n          placeholder: '변경할 todo를 입력해주세요.',\n          type: 'text',\n        },\n      },\n      buttons: {\n        cancel: {\n          text: 'Cancel',\n          value: null,\n          visible: false,\n          className: '',\n          closeModal: true,\n        },\n        confirm: {\n          text: 'OK',\n          value: true,\n          visible: true,\n          className: '',\n          closeModal: true,\n        },\n      },\n    }).then(async inputValue => {\n      if (inputValue === null) return false;\n\n      if (inputValue === '') {\n        swal('빈칸을 입력하셧습니다.');\n        return false;\n      }\n      await updateTodo({\n        ...todo,\n        todo: inputValue,\n      });\n      prop.fetchTodo();\n      swal('변경되었습니다.', 'You wrote: ' + inputValue, 'success');\n    });\n  };\n\n  return (\n    <Grid key={todo.id} xs={12} item>\n      <Paper elevation={2} style={styles.Paper}>\n        <span style={styles.Todo}>{todo.id}</span>\n        <IconButton onClick={handleCheck}>\n          <Checkbox tabIndex={-1} disableRipple checked={todo.isCompleted} />\n        </IconButton>\n        <ListItemText>{todo.todo}</ListItemText>\n        <IconButton\n          onClick={handleChange}\n          color=\"secondary\"\n          aria-label=\"Delete\"\n        >\n          <Create fontSize=\"small\" />\n        </IconButton>\n        <IconButton\n          onClick={handleDelete}\n          color=\"secondary\"\n          aria-label=\"Delete\"\n        >\n          <Clear fontSize=\"small\" />\n        </IconButton>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default Todo;\n","C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\pages\\Todo\\TodoItem\\style.js",[],[],"C:\\Users\\jin\\Documents\\GitHub\\wanted-pre-onboarding-fe-6-10\\src\\styles\\index.js",[],[],{"ruleId":"85","severity":1,"message":"86","line":84,"column":55,"nodeType":"87","messageId":"88","endLine":84,"endColumn":69,"fix":"89"},{"ruleId":"85","severity":1,"message":"86","line":115,"column":55,"nodeType":"87","messageId":"88","endLine":115,"endColumn":69,"fix":"90"},{"ruleId":"91","severity":1,"message":"92","line":56,"column":14,"nodeType":"93","messageId":"94","endLine":56,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":60,"column":5,"nodeType":"93","messageId":"94","endLine":60,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":71,"column":5,"nodeType":"93","messageId":"94","endLine":71,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":113,"column":7,"nodeType":"93","messageId":"94","endLine":113,"endColumn":21},"dot-notation","[\"access_token\"] is better written in dot notation.","Literal","useDot",{"range":"95","text":"96"},{"range":"97","text":"96"},"react/destructuring-assignment","Must use destructuring prop assignment","MemberExpression","useDestructAssignment",[2323,2339],".access_token",[3123,3139]]